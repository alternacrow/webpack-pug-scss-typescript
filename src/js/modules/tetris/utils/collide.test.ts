import { collide } from './collide';

describe('utils/collide: 配列とオフセット付き配列を渡すと、配列の範囲外か、もしくは0以外の数値と重なるかどうかを返す', () => {
  it('範囲内、かつ0以外の数値と重ならない場合、falseを返す', () => {
    [
      { x: 1, y: 0 },
      { x: 2, y: 0 },
      { x: 1, y: 1 },
      { x: 2, y: 2 },
    ].forEach(pos => {
      expect(
        collide(
          [
            [1, 0, 0, 0, 1],
            [1, 0, 0, 0, 1],
            [1, 0, 0, 0, 1],
            [1, 0, 0, 0, 1],
            [1, 0, 0, 0, 1],
            [1, 1, 1, 1, 1],
          ],
          [
            [0, 1, 0],
            [0, 1, 0],
            [1, 1, 0],
          ],
          pos,
        ),
      ).toBe(false);
    });
  });

  it('範囲外の場合、trueを返す', () => {
    [
      { x: -1, y: 0 },
      { x: 3, y: 0 },
      { x: 0, y: -1 },
      { x: 0, y: 2 },
    ].forEach(pos => {
      expect(
        collide(
          [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
          ],
          [
            [0, 1, 0],
            [0, 1, 0],
            [1, 1, 0],
          ],
          pos,
        ),
      ).toBe(true);
    });
  });

  it('0以外の数値と重なると、trueを返す', () => {
    [{ x: 0, y: 0 }].forEach(pos => {
      expect(
        collide(
          [
            [6, 0, 0, 3],
            [1, 0, 0, 4],
            [9, 0, 0, 7],
            [3, 1, 2, 8],
          ],
          [
            [0, 1, 0],
            [0, 1, 0],
            [1, 1, 0],
          ],
          pos,
        ),
      ).toBe(true);
    });
  });
});
